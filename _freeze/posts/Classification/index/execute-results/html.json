{
  "hash": "020d0a5fcfee59271f97af472912845a",
  "result": {
    "markdown": "---\ntitle: \"Classification\"\ntitle-block-banner: true\ndescription: \"Theory and example about classfication algorithms\"\ncategories: [Logistic Regression, Supervised Learning] \nauthor: \"Akash Mittal\"\ndate: \"11/18/2023\"\n---\n\n### Introduction to Classifcation Algorithms in Machine Learning\n\nClassification is a type of problem in supervised machine learning where the goal is to predict the class labels of new instances based on past observations. In a classification problem, the algorithm learns from a labeled dataset, where each data point is associated with a specific class label. The trained model can then be used to predict the class labels of unseen or future instances.\n\nThere are two types of classfications based on the number of classes:\n\n1. Binary Classification: There are two classes to classify into. Usually the classes are True or False or 0 or 1.\n\n2. Multiclass Classification: In multiclass classification, there are more than two classes.\n\nSome popular classfication algorithms :\n\n1. Logistic Regression: Used for binary classification. It models the probability of an instance belonging to a particular class.\n\n2. Support Vector Machines (SVM): SVM seeks to find a hyperplane that best separates different classes in the feature space. It is effective in both binary and multiclass classification.\n\n3. Decision Trees: Decision trees recursively split the dataset based on features to create a tree-like structure, making decisions at each node to classify instances.\n\n4. k-Nearest Neighbors (k-NN): k-NN classifies instances based on the majority class of their k nearest neighbors in the feature space.\n\nClassfication algorithms are evaluated based on accuracy, precision, recall, F1 score, and the area under the Receiver Operating Characteristic (ROC) curve. But the choice of which metric to choose depends on the specific goals and characteristics of the problem at hand.\n\n### Example of Logistic Regression\n\nIn this example I am using Iris dataset which is a popular dataset used in kaggle competitions. In this example we will apply logistic regression to classify iris flowers into two classes (binary classification).\n\n**Loading the Data**\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, classification_report\nimport matplotlib.pyplot as plt\n\niris = sns.load_dataset('iris')\n\niris.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n**Visualize the data**\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nsns.pairplot(iris, hue='species', markers=[\"o\", \"s\", \"D\"], palette='Spectral')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=1069 height=947}\n:::\n:::\n\n\n**Creating a Logistic Regression Model**\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\niris['target'] = np.where(iris['species'] == 'versicolor', 1, 0)\nX = iris[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']]\ny = iris['target']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\n\ny_pred = model.predict(X_test)\n```\n:::\n\n\n**Evaluating the Model**\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\naccuracy = accuracy_score(y_test, y_pred)\nclassification_rep = classification_report(y_test, y_pred)\n\nprint(f\"Accuracy: {accuracy}\")\nprint(\"Classification Report:\\n\", classification_rep)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAccuracy: 0.8\nClassification Report:\n               precision    recall  f1-score   support\n\n           0       0.83      0.90      0.86        21\n           1       0.71      0.56      0.63         9\n\n    accuracy                           0.80        30\n   macro avg       0.77      0.73      0.74        30\nweighted avg       0.79      0.80      0.79        30\n\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}